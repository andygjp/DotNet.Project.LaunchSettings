# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: VS2017-Win2016

variables:
  buildPlatform: Any CPU
  buildConfiguration: Release

steps:

- task: DotNetCoreCLI@2
  displayName: List DotNet SDKS
  inputs:
    command: custom
    custom: --list-sdks

- task: PowerShell@2
  displayName: Execute Build Script
  inputs:
    targetType: filePath
    filePath: .\build.ps1
    arguments: --configuration Release
    workingDirectory: $(Build.SourcesDirectory)

- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testRunner: xunit
    testResultsFiles: .\test_results\results.xml

- task: PublishPipelineArtifact@0
  displayName: Publish Output Artifact
  inputs:
    artifactName: output
    targetPath: .\output

- task: PublishPipelineArtifact@0
  displayName: Publish Test Result Artifact
  inputs:
    artifactName: test_results
    targetPath: .\test_results

- task: PublishPipelineArtifact@0
  displayName: Publish Package Artifact
  inputs:
    artifactName: package
    targetPath: .\package

- task: NuGetCommand@2
  displayName: Publish Package To NuGet
  continueOnError: true
  condition: $(UploadToNuget)
  inputs:
    command: push
    packagesToPush: .\package\*.nupkg
    nuGetFeedType: external
    publishFeedCredentials: nuget.org
    allowPackageConflicts: true
    versioningScheme: byEnvVar
    versionEnvVar: $(Version)
